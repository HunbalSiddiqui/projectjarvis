[{"F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\index.js":"1","F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\reportWebVitals.js":"2","F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\App.js":"3","F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\Pages\\Home\\Home.jsx":"4","F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\Components\\Project\\Project.jsx":"5","F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\Components\\NavItem\\NavItem.jsx":"6","F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\Components\\Header\\Header.jsx":"7","F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\Components\\ImageCarousel\\ImageCarousel.jsx":"8","F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\Pages\\About\\About.jsx":"9"},{"size":602,"mtime":1611063302713,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1611063302713,"results":"12","hashOfConfig":"11"},{"size":408,"mtime":1611139444251,"results":"13","hashOfConfig":"11"},{"size":2946,"mtime":1611139194039,"results":"14","hashOfConfig":"11"},{"size":2262,"mtime":1611139194015,"results":"15","hashOfConfig":"11"},{"size":1303,"mtime":1611139193999,"results":"16","hashOfConfig":"11"},{"size":903,"mtime":1611139193975,"results":"17","hashOfConfig":"11"},{"size":2182,"mtime":1611139193983,"results":"18","hashOfConfig":"11"},{"size":162,"mtime":1611139450702,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iju540",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\index.js",[],"F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\reportWebVitals.js",[],"F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\App.js",[],"F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\Pages\\Home\\Home.jsx",["43","44","45","46"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Home.css\";\r\n// import ScrollableSection, { ScrollableLink } from \"react-update-url-on-scroll\";\r\nimport Header from \"../../Components/Header/Header\";\r\nimport NavItem from \"../../Components/NavItem/NavItem\";\r\nimport Project from \"../../Components/Project/Project\";\r\n\r\nimport Prismic from '@prismicio/client'\r\nimport { Date, Link, RichText } from 'prismic-reactjs'\r\n\r\n// const apiEndpoint = 'https://aashirtest2.cdn.prismic.io/api/v2'\r\n// const accessToken = 'MC5ZQWJuUHhNQUFDY0FyajZ2.A--_ve-_ve-_vT_vv70vTO-_ve-_ve-_vWhT77-9JX7vv73vv73vv70g77-977-977-9VV1cTU_vv73vv71FPw' // This is where you would add your access token for a Private repository\r\nconst apiEndpoint = 'https://portfolio-pedro.cdn.prismic.io/api/v2'  \r\nconst accessToken = 'MC5ZQWM0NWhNQUFDWUFyN1RG.77-9O--_ve-_ve-_ve-_ve-_ve-_vQ3vv73vv73vv73vv73vv71Y77-9Be-_vSEBMe-_vU_vv73vv73vv71-bu-_ve-_ve-_vQQ'\r\nconst client = Prismic.client(apiEndpoint, { accessToken })\r\n\r\n\r\nfunction Home(props) {\r\n  const [currentUrl, setcurrentUrl] = useState('/')\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", listenScrollEvent);\r\n    setTimeout(() => {\r\n      listenScrollEvent()\r\n    }, 500);\r\n    return () => {\r\n      // cleanup\r\n    }\r\n  }, [window.location.pathname])\r\n\r\n  // Fetching data from prismic\r\n  const [doc, setDocData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      client.query('').then(res => {\r\n        setDocData((prevState) => res.results)\r\n      })\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const listenScrollEvent = () => {\r\n    // console.log(window.location.pathname)\r\n\r\n    setcurrentUrl((prevState) => window.location.pathname)\r\n  }\r\n  return (\r\n    <div className=\"home-wrapper-container\">\r\n      <div className=\"home-container\">\r\n        <div className=\"header\" style={{ zIndex: \"2\" }}>\r\n          <Header currentUrl={currentUrl} />\r\n        </div>\r\n        <div className=\"left-nav\">\r\n          <div className=\"left-nav-items\">\r\n            {\r\n              doc ?\r\n                doc.map((project, index) => {\r\n                  return (\r\n                    <NavItem currentUrl={currentUrl} projectName={\"Project1\"} project={project.data}/>\r\n                  )\r\n                })\r\n                :\r\n                null\r\n            } \r\n          </div>\r\n          <div className=\"left-nav-footer\">\r\n            <h1 className=\"f1-5\" style={{color:\"#8c8c8c\"}}>Contact me IG</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"projectsContent\" >\r\n          {\r\n            doc ?\r\n              doc.map((project, index) => {\r\n                return (\r\n                  <Project key={index} currentUrl={currentUrl} urlName={\"Project1\"} projectName={\"Project1\"} project={project.data} />\r\n                )\r\n              })\r\n              :\r\n              null\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n",["47","48"],"F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\Components\\Project\\Project.jsx",["49","50","51","52"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Project.css\";\r\nimport sstatic from \"./Assets/sstatic.PNG\";\r\nimport ScrollableSection, { ScrollableLink } from \"react-update-url-on-scroll\";\r\nimport ImageCarousel from \"../ImageCarousel/ImageCarousel\";\r\n\r\nfunction Project(props) {\r\n  const [itemColor, setitemColor] = useState(\"black\");\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (props.currentUrl === `/${props.project.title[0].text}`) setitemColor(\"blue\");\r\n    else setitemColor(\"black\");\r\n    return () => {\r\n    };\r\n  }, [props.currentUrl]);\r\n  const listenScrollEvent = () => { };\r\n  return (\r\n    <ScrollableSection name={props.project.title[0].text}>\r\n      <div className=\"project-container-wrapper\">\r\n        <div className=\"project-container\">\r\n          <div className=\"project-container-headings f1-5\">\r\n            <div\r\n              className=\"f1-5 flex-start project-heading fb\"\r\n              style={{ color: `${itemColor}` }}\r\n            >\r\n              {props.project.title[0].text}\r\n            </div>\r\n            <div className=\"f1-5 flex-end project-date\">\r\n              {props.project.projectdates}\r\n            </div>\r\n          </div>\r\n          <div className=\"project-container-content-div\">\r\n            <div className=\"project-container-content-left\">\r\n              <div className=\"project-container-content-left-img\">\r\n                <ImageCarousel projectId={props.project.title[0].text} projectimages={props.project.projectimages}/>\r\n              </div>\r\n              <div className=\"project-container-content-left-content\">\r\n                {\r\n                  props.project.description.map((para,index)=>{\r\n                    return(\r\n                      <p key={index} className={para.type}>{para.text}</p>\r\n                    )\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"project-container-content-right\">\r\n            <h2 className=\"f1\">Company: Conduit</h2>\r\n            <h2 className=\"f1\">Managing Director: David Morales</h2>\r\n            <h2 className=\"f1\">Creative: Pedro Damasceno</h2>\r\n          </div>\r\n         */}\r\n        </div>\r\n      </div>\r\n    </ScrollableSection>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n","F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\Components\\NavItem\\NavItem.jsx",["53","54"],"import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ScrollableSection, { ScrollableLink } from \"react-update-url-on-scroll\";\r\nimport \"./NavItem.css\";\r\nfunction NavItem(props) {\r\n  const [itemColor, setitemColor] = useState(\"lightgrey\");\r\n  useEffect(() => {\r\n    if (props.currentUrl === `/${props.project.title[0].text}`)\r\n      setitemColor(\"blue\");\r\n    else setitemColor(\"lightgrey\");\r\n    return () => {};\r\n  }, [props.currentUrl]);\r\n  return (\r\n    <ScrollableLink href={`/${props.project.title[0].text}`}>\r\n      <div\r\n        className=\"nav-item-container-wrapper flex-col pointer\"\r\n        style={{ color: `${itemColor}` }}\r\n      >\r\n        <h2 className=\"f1-5 item-heading\">\r\n          <span style={{ flex: \"3\" }}>{props.project.title[0].text}</span>\r\n          <span style={{ flex: \"1\" }}>{props.project.projectdates}</span>\r\n        </h2>\r\n        <p className=\"item-para\">\r\n          The garage opened in March 2018 . I managed to get paid in August.\r\n          People repair their vehicles themselves and I accompany them. It is\r\n          not...\r\n        </p>\r\n        {/* <h2 className=\"item-date f1-5 fb\">{props.project.projectdates}</h2> */}\r\n      </div>\r\n    </ScrollableLink>\r\n  );\r\n}\r\n\r\nexport default withRouter(NavItem);\r\n","F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\Components\\Header\\Header.jsx",[],"F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\Components\\ImageCarousel\\ImageCarousel.jsx",["55","56","57"],"import React, { useEffect, useState } from \"react\";\r\nimport sstatic from \"./Assets/sstatic.PNG\";\r\nimport ScrollableSection, { ScrollableLink } from \"react-update-url-on-scroll\";\r\n\r\nfunction ImageCarousel(props) {\r\n  useEffect(() => {\r\n    \r\n    return () => {\r\n    }\r\n  }, [])\r\n  return (\r\n    <ScrollableSection name={props.projectId}>\r\n      <div\r\n        id={props.projectId}\r\n        class=\"carousel slide\"\r\n        data-ride=\"carousel\"\r\n        data-interval={false}\r\n      >\r\n        <div class=\"carousel-inner\">\r\n          <div class=\"carousel-item active\">\r\n            <img\r\n              class=\"d-block\"\r\n              style={{ width: \"100%\", height: \"300px\", objectFit: \"fill\" }}\r\n              src={props.projectimages.url}\r\n              alt=\"First slide\"\r\n            />\r\n          </div>\r\n            <div class=\"carousel-item\">\r\n            <img\r\n              class=\"d-block\"\r\n              style={{ width: \"100%\", height: \"300px\", objectFit: \"fill\" }}\r\n              src={props.projectimages.second.url}\r\n              alt=\"Second slide\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"carousel-item\">\r\n            <img\r\n              class=\"d-block\"\r\n              style={{ width: \"100%\", height: \"300px\", objectFit: \"fill\" }}\r\n              src={props.projectimages.third.url}\r\n              alt=\"Third slide\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <a\r\n          class=\"carousel-control-prev\"\r\n          style={{ opacity: \"0\", cursor: \"e-resize\" }}\r\n          href={`#${props.projectId}`}\r\n          role=\"button\"\r\n          data-slide=\"prev\"\r\n        >\r\n          <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n          <span class=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a\r\n          class=\"carousel-control-next\"\r\n          style={{ opacity: \"0\", cursor: \"e-resize\" }}\r\n          href={`#${props.projectId}`}\r\n          role=\"button\"\r\n          data-slide=\"next\"\r\n        >\r\n          <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n          <span class=\"sr-only\">Next</span>\r\n        </a>\r\n      </div>\r\n    </ScrollableSection>\r\n  );\r\n}\r\n\r\nexport default ImageCarousel;\r\n","F:\\My Client's Projects\\Aashir Projects\\projectjarvis\\src\\Pages\\About\\About.jsx",[],{"ruleId":"58","severity":1,"message":"59","line":9,"column":10,"nodeType":"60","messageId":"61","endLine":9,"endColumn":14},{"ruleId":"58","severity":1,"message":"62","line":9,"column":16,"nodeType":"60","messageId":"61","endLine":9,"endColumn":20},{"ruleId":"58","severity":1,"message":"63","line":9,"column":22,"nodeType":"60","messageId":"61","endLine":9,"endColumn":30},{"ruleId":"64","severity":1,"message":"65","line":28,"column":6,"nodeType":"66","endLine":28,"endColumn":32,"suggestions":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"58","severity":1,"message":"72","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":15},{"ruleId":"58","severity":1,"message":"73","line":4,"column":29,"nodeType":"60","messageId":"61","endLine":4,"endColumn":43},{"ruleId":"64","severity":1,"message":"74","line":18,"column":6,"nodeType":"66","endLine":18,"endColumn":24,"suggestions":"75"},{"ruleId":"58","severity":1,"message":"76","line":19,"column":9,"nodeType":"60","messageId":"61","endLine":19,"endColumn":26},{"ruleId":"58","severity":1,"message":"77","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":25},{"ruleId":"64","severity":1,"message":"74","line":12,"column":6,"nodeType":"66","endLine":12,"endColumn":24,"suggestions":"78"},{"ruleId":"58","severity":1,"message":"79","line":1,"column":28,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"72","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":15},{"ruleId":"58","severity":1,"message":"73","line":3,"column":29,"nodeType":"60","messageId":"61","endLine":3,"endColumn":43},"no-unused-vars","'Date' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'RichText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'window.location.pathname'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["80"],"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"'sstatic' is defined but never used.","'ScrollableLink' is defined but never used.","React Hook useEffect has a missing dependency: 'props.project.title'. Either include it or remove the dependency array.",["83"],"'listenScrollEvent' is assigned a value but never used.","'ScrollableSection' is defined but never used.",["84"],"'useState' is defined but never used.",{"desc":"85","fix":"86"},"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"87","fix":"89"},"Update the dependencies array to be: []",{"range":"90","text":"91"},"Update the dependencies array to be: [props.currentUrl, props.project.title]",{"range":"92","text":"93"},{"range":"94","text":"93"},[1264,1290],"[]",[532,550],"[props.currentUrl, props.project.title]",[473,491]]